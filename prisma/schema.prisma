generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Certificate {
  id             String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  enrollmentId   String     @db.Uuid
  certificateUrl String     @db.VarChar(255)
  issuedAt       DateTime   @default(now()) @db.Timestamp(6)
  updatedAt      DateTime   @default(now()) @db.Timestamp(6)
  Enrollment     Enrollment @relation(fields: [enrollmentId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([enrollmentId], map: "certificates_enrollmentId_idx")
}

model Enrollment {
  id           String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId       String           @db.VarChar(255)
  courseId     String           @db.VarChar(255)
  courseName   String?          @db.VarChar(255)
  userName     String?          @db.VarChar(255)
  status       EnrollmentStatus @default(PENDING)
  isFree       Boolean          @default(false)
  paymentId    String?          @db.VarChar(255)
  createdAt    DateTime         @default(now()) @db.Timestamp(6)
  updatedAt    DateTime         @default(now()) @db.Timestamp(6)
  completedAt  DateTime?        @db.Timestamp(6)
  Certificate  Certificate[]
  UserProgress UserProgress[]

  @@unique([userId, courseId])
  @@index([courseId], map: "enrollments_courseId_idx")
  @@index([status], map: "enrollments_status_idx")
  @@index([userId], map: "enrollments_userId_idx")
}

model UserProgress {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  enrollmentId String     @db.Uuid
  lessonId     String     @db.VarChar(255)
  isCompleted  Boolean    @default(false)
  progress     Int        @default(0)
  updatedAt    DateTime   @default(now()) @db.Timestamp(6)
  Enrollment   Enrollment @relation(fields: [enrollmentId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([enrollmentId, lessonId])
  @@index([enrollmentId], map: "user_progress_enrollmentId_idx")
  @@index([lessonId], map: "user_progress_lessonId_idx")
}

enum EnrollmentStatus {
  PENDING
  ACTIVE
  COMPLETED
  CANCELLED
  FAILED
}
